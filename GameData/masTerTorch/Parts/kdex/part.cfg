PART
{
	// --- general parameters ---
	name = KerbalDustExperiment
	module = Part
	author = masTerTorch

	// --- asset parameters ---
	mesh = model.mu
	rescaleFactor = 1

	// --- editor parameters ---
	TechRequired = spaceExploration
	entryCost = 7500
	cost = 1200
	category = Science
	subcategory = 0
	title = #KDEX_title // Kerbal Dust Experiment
	manufacturer = #KDEX_manufacturer // masTerTorch R&D Center
	description = #KDEX_description // Inside this tiny coffee can is a highly sensitive sensor which can measure the density of dust particles colliding with the back of the can. Now we can extract science out of collisions!
	tags = #KDEX_tags // experiment dust collision research rerun re-run reus re-us redo re-do reset re-set science sensor kdex

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 0,1,0,0,0

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_attach = 0.0, -0.1, 0.16, 0.0, 0, -0.5

	// --- standard part parameters ---
	mass = 0.02
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 8
	maxTemp = 1600
	PhysicsSignificance = 1
	bulkheadProfiles = srf
	explosionPotential = 0.1
	
	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = open
		startEventGUIName = #KDEX_startEventGUIName // Open Lid
		endEventGUIName = #KDEX_endEventGUIName // Close Lid
		actionGUIName = #KDEX_actionGUIName // Toggle Lid
	}
 
	MODULE
	{
		name = ModuleScienceExperiment
		experimentID = kdex
		experimentActionName = #KDEX_experimentActionName // Run Dust Analysis
		resetActionName = #KDEX_resetActionName // Discard Data
		reviewActionName = #KDEX_reviewActionName // Review Data
		collectActionName = #KDEX_collectActionName // Take Data
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = True
		usageReqMaskInternal = 1
		usageReqMaskExternal = 8
		xmitDataScalar = 0.5
		FxModules = 0 // Index of the animation module
		dataIsCollectable = True
		interactionRange = 1.5
		rerunnable = True
	}
	
	MODULE
	{
		name = ModuleCargoPart
		stackableQuantity = 4
		packedVolume = 25
	}
}
